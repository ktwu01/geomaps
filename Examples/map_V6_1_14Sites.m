% Map_V6clear all; clc; close all; time_sys1=clock;addpath 'D:\0lrn\00Res\Functions'addpath 'D:\0lrn\00Res\Functions\m_map'%% create% Station informationSTs = {};sites = {};lons = [];lats = [];freqs = []; % frequencies, MHz% Svalbard (SVMR, 78.3°N, 16°E)STs = [STs, 'SVMR'];sites = [sites, 'Svalbard'];lons = [lons, 16];lats = [lats, 78.3];freqs = [freqs, 31]; % MHz% Tromsø (TRMR, 69.6°N, 19.2°E)STs = [STs, 'TRMR'];sites = [sites, 'Tromsø'];lons = [lons, 19.2];lats = [lats, 69.6];freqs = [freqs, 30.3]; % MHz% Mohe (MHMR, 53.5°N, 122.33°E)STs = [STs, 'MHMR'];sites = [sites, 'Mohe'];lons = [lons, 122+20/60];lats = [lats, 53+30/60];freqs = [freqs, 38.9]; % MHz% Beijing (BJMR, 40.3°N, 116.2°E)STs = [STs, 'BJMR'];sites = [sites, 'Beijing'];lons = [lons, 116.2];lats = [lats, 40.3];freqs = [freqs, 38.9]; % MHz% Mengcheng (MCMR, 33.3°N, 116.5°E)STs = [STs, 'MCMR'];sites = [sites, 'Mengcheng'];lons = [lons, 116.5];lats = [lats, 33.3];freqs = [freqs, 38.9]; % MHz% Wuhan (WHMR, 30.5°N, 114.2°E)STs = [STs, 'WHMR'];sites = [sites, 'Wuhan'];lons = [lons, 114.2];lats = [lats, 30.5];freqs = [freqs, 38.9]; % MHz% Kunming (KMMR, 25.6°N 103.8°N)STs = [STs, 'KMMR'];sites = [sites, 'Kunming'];lons = [lons, 103.8];lats = [lats, 25.6];freqs = [freqs, 37.5]; % MHz        % % Fuke (FKMR, 19.5°N, 109.1°E)        % STs = [STs, 'FKMR'];        % sites = [sites, 'Fuke'];        % lons = [lons, 109.1];        % lats = [lats, 19.5];        % freqs = [freqs, 38.9]; % MHz        % % Sanya (SYMR, 18.3°N, 109.6°E)        % STs = [STs, 'SYMR'];        % sites = [sites, 'Sanya'];        % lons = [lons, 109.6];        % lats = [lats, 18.3];        % freqs = [freqs, nan]; % MHz        % Ledong (LDMR, 18.4°N,109°E)        STs = [STs, 'LDMR'];        sites = [sites, 'Ledong'];        lons = [lons, 109];        lats = [lats, 18.4];        freqs = [freqs, 38.9]; % MHz% Kototabang (KTMR, 0.2°S, 100.3°E)STs = [STs, 'KTMR'];sites = [sites, 'Kototabang'];lons = [lons, 100.3];lats = [lats, -0.2];freqs = [freqs, 37.7]; % MHz% Ascension Island (ASSMR, 7.9°S, 14.4°W)STs = [STs, 'ASSMR'];sites = [sites, 'Ascension Island'];lons = [lons, -14.4];lats = [lats, -7.9];freqs = [freqs, 43.5]; % MHz% Darwin (DWMR, 12.3°S, 130.5°E),STs = [STs, 'DWMR'];sites = [sites, 'Darwin'];lons = [lons, 130.5];lats = [lats, -12.3];freqs = [freqs, 33.2]; % MHz% Andes Lidar Observatory (ALOMR, 30.3°S, 70.7°W)STs = [STs, 'ALOMR'];sites = [sites, 'Andes Lidar Observatory'];lons = [lons, -70.74];lats = [lats, -30.25];freqs = [freqs, 35.2]; % MHz% King Edward Point Station (KEPMR, 54°S, 36°W)STs = [STs, 'KEPMR'];sites = [sites, 'King Edward Point Station'];lons = [lons, -36];lats = [lats, -54];freqs = [freqs, 35.2]; % MHz% Davis Station (DVMR, 68.6°S, 77.9°E)STs = [STs, 'DVMR'];sites = [sites, 'Davis Station'];lons = [lons, 77.9];lats = [lats, -68.6];freqs = [freqs, 33.2]; % MHzfigure;whitefig;figpos([1 1])%% proj% m_proj('lambert','lon',[100 200],'lat',[-30 60]);% m_proj('lambert','lon',[0 359],'lat',[-60 61]);m_proj('miller','lon',[0 360],'lat',[-80 80]);m_coast('patch',[.888 .888 .888],'edgecolor','none');% m_grid('linewi',1,'layer','top','ytick',[-90:30:90]);m_grid('linewi',1,'layer','top','ytick',[-80, -60:30:60, 80]);% m_proj('azimuthal equal-area','radius',200,'lat',-20,'long',-130,'rot',0);% [CS,CH]=m_etopo2('contourf',[-9000:500:0 250:250:5000],'edgecolor','none');% m_grid('linestyle','none','tickdir','out','linewidth',2);% % % colormap([m_colmap('blues',70);m_colmap('gland',30)]);  % colormap([ m_colmap('blues',90); m_colmap('gland',48)]);% % clim([-9000 5000]);% m_elev('contourf',[-7000:1000:0 500:500:3000],'edgecolor','none');% colormap([m_colmap('blues',70);m_colmap('gland',30)]);  % clim([-7000 3000]);% brighten(.8);% m_grid('xticklabel',[-120   -60     0    60   120   180 -180  ],'yticklabel',[-60,-30,0,20,40,60,80], ...%     'linestyle','-','ytick',[-60,-30,0,20,40,60,80]);for k1=1:length(sites)% [range, ln, lt]=m_lldist([-123-6/60, lons(k)], [49+13/60, lats(k)], 40);     if lons(k1)>0        if strcmp(string(STs{k1}), 'MCMR')            hold on;            m_text(lons(k1)-2, lats(k1)+2, [string(sites{k1})+' ('+string(STs{k1})+', '+num2str(freqs(k1))+' MHz)'],'FontSize',12,'FontWeight','bold','Color','k','HorizontalAlignment', 'right');            hold on;            m_plot(lons(k1), lats(k1), 'r.','MarkerSize',20);        else            hold on;            m_text(lons(k1)+3, lats(k1), [string(sites{k1})+' ('+string(STs{k1})+', '+num2str(freqs(k1))+' MHz)'],'FontSize',12,'FontWeight','bold','Color','k');            hold on;            m_plot(lons(k1), lats(k1), 'r.','MarkerSize',20);        end    else        if strcmp(string(STs{k1}), 'ALOMR') | strcmp(string(STs{k1}), 'ASSMR') | strcmp(string(STs{k1}), 'KEPMR')             hold on;            m_text(lons(k1)-2+360, lats(k1), [string(sites{k1})+' ('+string(STs{k1})+', '+num2str(freqs(k1))+' MHz)'],'FontSize',12,'FontWeight','bold','Color','k','HorizontalAlignment', 'right');            hold on;            m_plot(lons(k1)+360, lats(k1), 'r.','MarkerSize',20);        else            hold on;            m_text(lons(k1)+3+360, lats(k1), [string(sites{k1})+' ('+string(STs{k1})+', '+num2str(freqs(k1))+' MHz)'],'FontSize',12,'FontWeight','bold','Color','k');            hold on;            m_plot(lons(k1)+360, lats(k1), 'r.','MarkerSize',20);        end    endendcities={'▲ Hunga-Tonga'};lons=[175.3];lats=[-20.54];fsz = [15];% for k1=1:length(1)for k1=1:length(cities)  % [range, ln, lt]=m_lldist([-123-6/60, lons(k)], [49+13/60, lats(k)], 40);   m_text(lons(k1), lats(k1), sprintf('%s', cities{k1}),'FontSize',fsz(k1),'FontWeight','bold','Color','r');end% cities={'Pacific Ocean'};% lons=[200];% lats=[10];% fsz = [20];% % for k1=1:length(1)% for k1=1:length(cities)%   % [range, ln, lt]=m_lldist([-123-6/60, lons(k)], [49+13/60, lats(k)], 40); %   % m_text(lons(k1), lats(k1), sprintf('%s', cities{k1}),'FontSize',fsz(k1),'FontWeight','bold','Color','k');%   m_text(lons(k1), lats(k1), sprintf('%s', cities{k1}),'FontSize',fsz(k1),'Color','k');% end% ax=m_contfbar(1,[.5 .8],CS,CH);% ax=nph_colorbar;% title(ax,{'Level/m',''}); % Move up by inserting a blank line%% EXPORT FIG ==============================================================% Set renderer to "painters"set(gcf, 'Renderer', 'painters');print(gcf,['Map_V6_t='],'-dpng','-r600');% saveas(gcf,'Map_V6_t=','epsc')% saveas(gcf,['Map_V6_t=','s'],'svg');disp('Figure Saved.');