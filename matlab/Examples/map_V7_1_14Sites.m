% Map_V7_1clear all; clc; close all;addpath 'D:\0lrn\00Res\Functions'addpath 'D:\0lrn\00Res\Functions\m_map'fsz = [10 13];%% create% Station informationSTs = {};sites = {};lons = [];lats = [];freqs = []; % frequencies, MHz% Svalbard (SVMR, 78.3°N, 16°E)STs = [STs, 'SVMR'];sites = [sites, 'Svalbard'];lons = [lons, 16];lats = [lats, 78.3];freqs = [freqs, 31]; % MHz% Tromsø (TRMR, 69.6°N, 19.2°E)STs = [STs, 'TRMR'];sites = [sites, 'Tromsø'];lons = [lons, 19.2];lats = [lats, 69.6];freqs = [freqs, 30.3]; % MHz% Mohe (MHMR, 53.5°N, 122.33°E)STs = [STs, 'MHMR'];sites = [sites, 'Mohe'];lons = [lons, 122+20/60];lats = [lats, 53+30/60];freqs = [freqs, 38.9]; % MHz% Beijing (BJMR, 40.3°N, 116.2°E)STs = [STs, 'BJMR'];sites = [sites, 'Beijing'];lons = [lons, 116.2];lats = [lats, 40.3];freqs = [freqs, 38.9]; % MHz% Mengcheng (MCMR, 33.3°N, 116.5°E)STs = [STs, 'MCMR'];sites = [sites, 'Mengcheng'];lons = [lons, 116.5];lats = [lats, 33.3];freqs = [freqs, 38.9]; % MHz% Wuhan (WHMR, 30.5°N, 114.2°E)STs = [STs, 'WHMR'];sites = [sites, 'Wuhan'];lons = [lons, 114.2];lats = [lats, 30.5];freqs = [freqs, 38.9]; % MHz% Kunming (KMMR, 25.6°N 103.8°N)STs = [STs, 'KMMR'];sites = [sites, 'Kunming'];lons = [lons, 103.8];lats = [lats, 25.6];freqs = [freqs, 37.5]; % MHz        % % Fuke (FKMR, 19.5°N, 109.1°E)        % STs = [STs, 'FKMR'];        % sites = [sites, 'Fuke'];        % lons = [lons, 109.1];        % lats = [lats, 19.5];        % freqs = [freqs, 38.9]; % MHz        % % Sanya (SYMR, 18.3°N, 109.6°E)        % STs = [STs, 'SYMR'];        % sites = [sites, 'Sanya'];        % lons = [lons, 109.6];        % lats = [lats, 18.3];        % freqs = [freqs, nan]; % MHz        % Ledong (LDMR, 18.4°N,109°E)        STs = [STs, 'LDMR'];        sites = [sites, 'Ledong'];        lons = [lons, 109];        lats = [lats, 18.4];        freqs = [freqs, 38.9]; % MHz% Kototabang (KTMR, 0.2°S, 100.3°E)STs = [STs, 'KTMR'];sites = [sites, 'Kototabang'];lons = [lons, 100.3];lats = [lats, -0.2];freqs = [freqs, 37.7]; % MHz% Ascension Island (ASSMR, 7.9°S, 14.4°W)STs = [STs, 'ASSMR'];sites = [sites, 'Ascension Island'];lons = [lons, -14.4];lats = [lats, -7.9];freqs = [freqs, 43.5]; % MHz% Darwin (DWMR, 12.3°S, 130.5°E),STs = [STs, 'DWMR'];sites = [sites, 'Darwin'];lons = [lons, 130.5];lats = [lats, -12.3];freqs = [freqs, 33.2]; % MHz% Andes Lidar Observatory (ALOMR, 30.3°S, 70.7°W)STs = [STs, 'ALOMR'];sites = [sites, 'Andes Lidar Observatory'];lons = [lons, -70.74];lats = [lats, -30.25];freqs = [freqs, 35.2]; % MHz% King Edward Point Station (KEPMR, 54°S, 36°W)STs = [STs, 'KEPMR'];sites = [sites, 'King Edward Point Station'];lons = [lons, -36];lats = [lats, -54];freqs = [freqs, 35.2]; % MHz% Davis Station (DVMR, 68.6°S, 77.9°E)STs = [STs, 'DVMR'];sites = [sites, 'Davis Station'];lons = [lons, 77.9];lats = [lats, -68.6];freqs = [freqs, 33.2]; % MHzfigure;whitefig;figpos([1 1])%% projgx = geoaxes;geolimits([-70 80],[0.000000001 -0.000000001 ]) %LAT, LON% geobasemap colorterrain% geobasemap landcovergeobasemap satelliteset(gx,'TickLabelFormat','dd')set(gx,'TickDir','out')% gx.LongitudeAxis.TickDirection = 'out';% gx.TickLabelFormat = 'dd';gx.LongitudeAxis.TickLabels = {'  0°' ,'  45°E' ,'  90°E' ,'  135°E' ,'  180°' ,'  135°W' ,'  90°W' ,'  45°W' ,'  0°'};grid offMRFontColor = 'yellow';%%for k1=1:length(sites)% [range, ln, lt]=m_lldist([-123-6/60, lons(k)], [49+13/60, lats(k)], 40);     if lons(k1)>0        if strcmp(string(STs{k1}), 'MCMR')            hold on;            text(lats(k1)+2, lons(k1)+3.001, [string(sites{k1})+' ('+string(STs{k1})+', '+num2str(freqs(k1))+' MHz)'],'FontSize',fsz(1),'FontWeight','bold','Color', MRFontColor);            hold on;            geoplot(lats(k1), lons(k1), 'r.','MarkerSize',20);        elseif strcmp(string(STs{k1}), 'SVMR')            hold on;            text(lats(k1)-2, lons(k1)+3.001, [string(sites{k1})+' ('+string(STs{k1})+', '+num2str(freqs(k1))+' MHz)'],'FontSize',fsz(1),'FontWeight','bold','Color',MRFontColor,'HorizontalAlignment', 'center');            hold on;            geoplot(lats(k1), lons(k1), 'r.','MarkerSize',20);        elseif strcmp(string(STs{k1}), 'DVMR')            hold on;            text(lats(k1)+5, lons(k1)+3.001, [string(sites{k1})+' ('+string(STs{k1})+', '+num2str(freqs(k1))+' MHz)'],'FontSize',fsz(1),'FontWeight','bold','Color',MRFontColor,'HorizontalAlignment', 'center');            hold on;            geoplot(lats(k1), lons(k1), 'r.','MarkerSize',20);                    else            hold on;            text(lats(k1), lons(k1)+3.001, [string(sites{k1})+' ('+string(STs{k1})+', '+num2str(freqs(k1))+' MHz)'],'FontSize',fsz(1),'FontWeight','bold','Color', MRFontColor);            hold on;            geoplot(lats(k1), lons(k1), 'r.','MarkerSize',20);        end    else        if strcmp(string(STs{k1}), 'ALOMR') | strcmp(string(STs{k1}), 'ASSMR') | strcmp(string(STs{k1}), 'KEPMR')             hold on;            text(lats(k1), lons(k1)-3.001+360, [string(sites{k1})+' ('+string(STs{k1})+', '+num2str(freqs(k1))+' MHz)'],'FontSize',fsz(1),'FontWeight','bold','Color', MRFontColor,'HorizontalAlignment', 'right');            hold on;            geoplot(lats(k1), lons(k1)+360, 'r.','MarkerSize',20);        else            hold on;            text(lats(k1), lons(k1)+3.001, [string(sites{k1})+' ('+string(STs{k1})+', '+num2str(freqs(k1))+' MHz)'],'FontSize',fsz(1),'FontWeight','bold','Color', MRFontColor);            hold on;            geoplot(lats(k1), lons(k1), 'r.','MarkerSize',20);        end    endend%% Volcanocities={'Hunga-Tonga Volcano'};lons=[175.3];lats=[-20.54];for k1=1:length(cities)  % [range, ln, lt]=m_lldist([-123-6/60, lons(k)], [49+13/60, lats(k)], 40);   text(lats(k1), lons(k1)+4, sprintf('%s', cities{k1}),'FontSize',fsz(2),'FontWeight','bold','Color','r');end% cities={'▲'};lons=[175.3];lats=[-20.54];for k1=1:length(1)    geoplot(lats(k1), lons(k1), 'r^','MarkerSize',11);    geoplot(lats(k1), lons(k1), 'r^','MarkerSize',10);    geoplot(lats(k1), lons(k1), 'r^','MarkerSize',9);    geoplot(lats(k1), lons(k1), 'r^','MarkerSize',8);    geoplot(lats(k1), lons(k1), 'r^','MarkerSize',7);    geoplot(lats(k1), lons(k1), 'r^','MarkerSize',6);    geoplot(lats(k1), lons(k1), 'r^','MarkerSize',5);    geoplot(lats(k1), lons(k1), 'r^','MarkerSize',4);    geoplot(lats(k1), lons(k1), 'r^','MarkerSize',3);    geoplot(lats(k1), lons(k1), 'r^','MarkerSize',2);    geoplot(lats(k1), lons(k1), 'r^','MarkerSize',1);end%% antipodecities={'Antipode'};lons=[175.3-180];lats=[20.54];for k1=1:length(cities)  % [range, ln, lt]=m_lldist([-123-6/60, lons(k)], [49+13/60, lats(k)], 40);   text(lats(k1), lons(k1)+4, sprintf('%s', cities{k1}),'FontSize',fsz(2),'FontWeight','bold','Color','b');endlons=[175.3-180];lats=[20.54];for k1=1:length(1)    % % geoplot(lats(k1), lons(k1), 'bv','MarkerSize',11);    % % geoplot(lats(k1), lons(k1), 'bv','MarkerSize',10);    % geoplot(lats(k1), lons(k1), 'bv','MarkerSize',9);    geoplot(lats(k1), lons(k1), 'bv','MarkerSize',8);    geoplot(lats(k1), lons(k1), 'bv','MarkerSize',7);    geoplot(lats(k1), lons(k1), 'bv','MarkerSize',6);    geoplot(lats(k1), lons(k1), 'bv','MarkerSize',5);    geoplot(lats(k1), lons(k1), 'bv','MarkerSize',4);    geoplot(lats(k1), lons(k1), 'bv','MarkerSize',3);    geoplot(lats(k1), lons(k1), 'bv','MarkerSize',2);    geoplot(lats(k1), lons(k1), 'bv','MarkerSize',1);end%% EXPORT FIG ==============================================================% Set renderer to "painters"set(gcf, 'Renderer', 'painters');print(gcf,['Map_V7_1_t='],'-dpng','-r600');% saveas(gcf,'Map_V7_1_t=','epsc')% saveas(gcf,['Map_V7_1_t=','s'],'svg');disp('Figure Saved.');